from .valid_sudoku import Solution as valid_sudoku
from test_runner import TestRunner

# https://neetcode.io/problems/valid-sudoku
if __name__ == "__main__":
    solutions = [
        valid_sudoku(),
    ]

    test_cases = [
        {'inputs': {
            'board': [["1", "2", ".", ".", "3", ".", ".", ".", "."],
                      ["4", ".", ".", "5", ".", ".", ".", ".", "."],
                      [".", "9", "8", ".", ".", ".", ".", ".", "3"],
                      ["5", ".", ".", ".", "6", ".", ".", ".", "4"],
                      [".", ".", ".", "8", ".", "3", ".", ".", "5"],
                      ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                      [".", ".", ".", ".", ".", ".", "2", ".", "."],
                      [".", ".", ".", "4", "1", "9", ".", ".", "8"],
                      [".", ".", ".", ".", "8", ".", ".", "7", "9"]]
        }, 'expected': True},
        {'inputs': {
            'board': [["1", "2", ".", ".", "3", ".", ".", ".", "."],
                      ["4", ".", ".", "5", ".", ".", ".", ".", "."],
                      [".", "9", "1", ".", ".", ".", ".", ".", "3"],
                      ["5", ".", ".", ".", "6", ".", ".", ".", "4"],
                      [".", ".", ".", "8", ".", "3", ".", ".", "5"],
                      ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                      [".", ".", ".", ".", ".", ".", "2", ".", "."],
                      [".", ".", ".", "4", "1", "9", ".", ".", "8"],
                      [".", ".", ".", ".", "8", ".", ".", "7", "9"]]
        }, 'expected': False},
        {'inputs': {
            'board': [["1", "2", ".", ".", "3", ".", ".", ".", "."],
                      ["4", ".", ".", "5", ".", ".", ".", ".", "."],
                      [".", "9", "1", ".", ".", ".", ".", ".", "3"],
                      ["5", ".", ".", ".", "6", ".", ".", ".", "4"],
                      [".", ".", ".", "8", ".", "3", ".", ".", "5"],
                      ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
                      [".", ".", ".", ".", ".", ".", "2", ".", "."],
                      [".", ".", ".", "4", "1", "9", ".", ".", "8"],
                      [".", ".", ".", ".", "8", ".", ".", "7", "9"]]
        }, 'expected': False},
    ]

    print('Running tests...\n')

    for i, solution in enumerate(solutions):
        print(
            f"Testing solution {i + 1}/{len(solutions)}", '\n')
        TestRunner.run_tests(solution.isValidSudoku, test_cases)
        print('\n')
